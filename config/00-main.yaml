# Top level configuration
ores:
  scoring_system: celery_queue
  wsgi:
    application_root: ""
    url_prefix: ""
    scheme: 'https'
    error_host: 'https://www.wikimedia.org'
    error_alt: 'Wikimedia'
  data_paths:
    nltk: /srv/ores/config/submodules/wheels/nltk/
  home:
    footer: >
      Hosted by Wikimedia Cloud Services &amp; written in
      <a href="https://python.org">Python 3</a>
    notice: >
      This the experimental version of ORES running in Wikimedia Cloud Services.
      For the stable, production version of ORES, see <a href="https://ores.wikimedia.org">https://ores.wikimedia.org</a>

# Score cache options
score_caches:
  ores_redis:
    class: ores.score_caches.Redis
    host: ores-redis-02
    port: 6380
    prefix: "ores"
    socket_timeout: 15

lock_managers:
  pool_counter:
    - ores-poolcounter-1:7531

# Metrics collection options
metrics_collectors:
  local_logging:
    class: ores.metrics_collectors.Logger
  wmflabs_statsd:
    class: ores.metrics_collectors.Statsd
    host: labmon1001.eqiad.wmnet
    prefix: ores.{hostname}

# Score processor
scoring_systems:
  defaults:
    score_cache: ores_redis
    lock_manager: pool_counter
    metrics_collector: wmflabs_statsd
    scoring_contexts: {}  # See 00-scoring_contexts.yaml
  local_single_thread:
    class: ores.scoring_systems.SingleThread
  local_process_pool:
    class: ores.scoring_systems.ProcessPool
    workers: 8
  celery_queue:
    class: ores.scoring_systems.CeleryQueue
    broker_url: redis://ores-redis-02:6379
    timeout: 15 # seconds
    queue_maxsize: 50 # pending tasks
    broker_transport_options: {'socket_timeout': 15} # seconds
    result_backend: redis://ores-redis-02:6379
    accept_content: ['pickle', 'json']
    task_serializer: 'json'
    result_serializer: 'json'
    worker_concurrency: 35
    worker_max_tasks_per_child: 100
    worker_hijack_root_logger: false
    task_create_missing_queues: true
